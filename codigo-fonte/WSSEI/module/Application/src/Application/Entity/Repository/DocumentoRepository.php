<?php

namespace Application\Entity\Repository;

use Base\Entity\Repository\AbstractEntityRepository;
use Application;
use Doctrine\Common\Util\Debug;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * DocumentoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DocumentoRepository extends AbstractEntityRepository
{
    public function listarDocumentos ($procedimento, $limit, $offset) {

        $qb = $this->_em->createQueryBuilder();

        $qb->select('D, S')
           ->from('Application\Entity\Documento', 'D')
           ->leftJoin('D.idSerie', 'S')
           ->where('D.idProcedimento = :procedimento')
           ->setParameter('procedimento', $procedimento);

        $result = $qb->getQuery()->getResult();
        if ($result) {
            $protocolo  = $this->_em->getRepository('Application\Entity\Protocolo');

            foreach($result as $value) {
                $isRestrito = 'N';

                /** @var Application\Entity\Protocolo $resultProtocolo */
                $resultProtocolo  = ($protocolo->findOneBy(array('idProtocolo'  => $value->getIdDocumento())));

                if ($resultProtocolo->getStaNivelAcesso() == 1) {
                    $isRestrito = 'S';
                }
            }
        }

        $qb->setFirstResult($offset)
            ->setMaxResults($limit);

        $paginator = new Paginator($qb, true);

        return array('result' => $paginator->getQuery()->getResult(), 'count' => $paginator->count(), 'restrito' => $isRestrito);
    }
}
